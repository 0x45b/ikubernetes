kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: traefik-ingress
  namespace: traefik-ingress
  labels:
    k8s-app: traefik-ingress
spec:
  selector:
    matchLabels:
      k8s-app: traefik-ingress
  template:
    metadata:
      labels:
        k8s-app: traefik-ingress
    spec:
      serviceAccountName: traefik-ingress-controller
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      nodeSelector:
        ingress-controller: traefik
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
      containers:
        - name: traefik-ingress
          image: traefik:v2.4
          args:
            - --log.level=WARN
            - --accesslog=true
            - --api
            - --api.insecure=true
            - --api.dashboard=true
            - --ping=true
            - --metrics.prometheus=true
            - --providers.kubernetescrd
            - --entrypoints.http.address=:80
            - --entrypoints.https.address=:443
            - --entrypoints.http.http.redirections.entryPoint.to=https
            - --entrypoints.http.http.redirections.entryPoint.scheme=https
            - --certificatesresolvers.alidns.acme.email=admin@fdisk.cc
            - --certificatesresolvers.alidns.acme.storage=alidns_acme.json
            - --certificatesresolvers.alidns.acme.keytype=RSA4096
            - --certificatesresolvers.alidns.acme.dnschallenge=true
            - --certificatesresolvers.alidns.acme.dnschallenge.provider=alidns
            - --certificatesresolvers.alidns.acme.dnschallenge.delaybeforecheck=0
            - --certificatesresolvers.alidns.acme.dnschallenge.resolvers=223.5.5.5:53,223.6.6.6:53
          readinessProbe:
            httpGet:
              path: /ping
              port: 8080
            initialDelaySeconds: 20
            timeoutSeconds: 2
          livenessProbe:
            httpGet:
              path: /ping
              port: 8080
            initialDelaySeconds: 20
            timeoutSeconds: 2
          ports:
            - name: http
              containerPort: 80
              hostPort: 80
            - name: https
              containerPort: 443
              hostPort: 443
            - name: dashboard
              containerPort: 8080
          env:
            - name: ALICLOUD_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: alicloud-dns
                  key: dns-key
            - name: ALICLOUD_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: alicloud-dns
                  key: dns-secret